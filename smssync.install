<?php
/**
 * Implements hook_install()
 */
function smssync_install()
{
  $t = get_t();

  // Create the custom SMS Message content type
  $content_type = array
  (
    'type' => 'sms',
    'name' => t('SMS message'),
    'base' => 'node_content',
    'description' => $t('Create a new SMS message.'),
    'custom' => TRUE,
    'modified' => TRUE,
    'locked' => FALSE,
    'body_label' => $t('Message')
  );


  $content_type = node_type_set_defaults($content_type);
  
  node_type_save($content_type);

  node_add_body_field($content_type);

  //Create the custom fields for the content type
  foreach (_smssync_installed_fields() as $field)
  {
    field_create_field($field);
  }

  foreach (_smssync_installed_instances() as $instance)
  {
    field_create_instance($instance);
  }
  
  // Create the custom SMS Outbox message content type
  $content_type = array
  (
    'type' => 'outbox',
    'name' => t('SMS message outbox'),
    'base' => 'node_content',
    'description' => $t('Create a new SMS outbox message. SMSSync will attempt to send the SMS message with the subscriber\'s handset'),
    'custom' => TRUE,
    'modified' => TRUE,
    'locked' => FALSE,
    'body_label' => $t('Message')
  );


  $content_type = node_type_set_defaults($content_type);
  
  node_type_save($content_type);

  node_add_body_field($content_type);

  //Create the custom fields for the content type
  foreach (_smssync_outbox_installed_fields() as $field)
  {
    field_create_field($field);
  }

  foreach (_smssync_outbox_installed_instances() as $instance)
  {
    field_create_instance($instance);
  }
}

/**
 * The custom fields
 */
function _smssync_installed_fields()
{
  return array
  (
    'smssync_timestamp' => array
    (
      'field_name' => 'smssync_timestamp',
      'cardinality' => 1,
      'type'    => 'text',
    ),

    'smssync_message_origin' => array
    (
      'field_name' => 'smssync_message_origin',
      'cardinality' => 1,
      'type'    => 'text',
    ),

    'smssync_message_id' => array
    (
      'field_name' => 'smssync_message_id',
      'cardinality' => 1,
      'type'    => 'text',
    ),

    'smssync_device_id' => array
    (
      'field_name' => 'smssync_device_id',
      'cardinality' => 1,
      'type'    => 'text',
    ),
   );
 
}

/**
 * Details of the custom fields
 */
function _smssync_installed_instances()
{
  $t = get_t();

  return array
  (
     'smssync_timestamp' => array
    (
      'field_name' => 'smssync_timestamp',
      'label'     => $t('Message Timestamp'),
      'bundle' => 'sms',
      'entity_type' => 'node',

      'widget'    => array
      (
          'type'  => 'text',
      ),
      'display' => array
      (
        'default' => array
        (
            'label' => 'above',
        ),
      ),
      'description' => 'The time at which the message was sent',
    ),

     'smssync_origin' => array
    (
      'field_name' => 'smssync_message_origin',
      'label'     => $t('Origin'),
      'bundle' => 'sms',
      'entity_type' => 'node',

      'widget'    => array
      (
          'type'  => 'text',
      ),
      'display' => array
      (
        'default' => array
        (
            'label' => 'above',
        ),
      ),
      'description' => 'The sender of the message',
    ),

     'smssync_id' => array
    (
      'field_name' => 'smssync_message_id',
      'label'     => $t('Message ID'),
      'bundle' => 'sms',
      'entity_type' => 'node',

      'widget'    => array
      (
          'type'  => 'text',
      ),
      'display' => array
      (
        'default' => array
        (
            'label' => 'above',
        ),
      ),
      'description' => 'The unique id of the message',
    ),

     'device_id' => array
    (
      'field_name' => 'smssync_device_id',
      'label'     => $t('Device ID'),
      'bundle' => 'sms',
      'entity_type' => 'node',

      'widget'    => array
      (
          'type'  => 'text',
      ),
      'display' => array
      (
        'default' => array
        (
            'label' => 'above',
        ),
      ),
      'description' => 'The id of the device that received the message',
    ),
  );
}


/**
 * The custom fields
 */
function _smssync_outbox_installed_fields()
{
  return array
  (
    'smssync_destination' => array
    (
      'field_name' => 'smssync_destination',
      'cardinality' => 1,
      'type'    => 'text',
    ),
   );
 
}

/**
 * Details of the custom fields
 */
function _smssync_outbox_installed_instances()
{
  $t = get_t();

  return array
  (
     'smssync_destination' => array
    (
      'field_name' => 'smssync_destination',
      'label'     => $t('Destination'),
      'bundle' => 'outbox',
      'entity_type' => 'node',

      'widget'    => array
      (
          'type'  => 'text',
      ),
      'display' => array
      (
        'default' => array
        (
            'label' => 'above',
        ),
      ),
      'description' => 'The sender of the message',
    ),
  );
}

/**
*Implements hook_uninstall()
*/
function smssync_uninstall()
{
	node_type_delete("sms");
	node_type_delete("outbox");
	
	db_query('DROP TABLE field_revision_smssync_device_id', array());
	db_query('DROP TABLE field_revision_smssync_message_id', array());
	db_query('DROP TABLE field_revision_smssync_message_origin', array());
	db_query('DROP TABLE field_revision_smssync_outbox_timestamp', array());
	db_query('DROP TABLE field_revision_smssync_timestamp', array());
	
	db_query('DROP TABLE field_data_smssync_device_id', array());
	db_query('DROP TABLE field_data_smssync_message_id', array());
	db_query('DROP TABLE field_data_smssync_message_origin', array());
	db_query('DROP TABLE field_data_smssync_outbox_timestamp', array());
	db_query('DROP TABLE field_data_smssync_timestamp', array());
}
